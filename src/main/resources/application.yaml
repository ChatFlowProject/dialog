server:
  port: 8080

spring:
  application:
    name: chat
  profiles:
    active: ${PROFILE_ACTIVE}
  datasource:
    driver-class-name: ${DB_DRIVER_CLASS_NAME}
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    database: mysql
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate.format_sql: true
      dialect: org.hibernate.dialect.MySQL8InnoDBDialect
  kafka:
    bootstrap-servers: "kafka-controller-headless.kafka.svc.cluster.local:9092"
    properties:
      security.protocol: PLAINTEXT # 프로토콜 명시
      bootstrap.servers.protocol.map: CLIENT:PLAINTEXT
      client.id: "chat-kafka-client" # 클라이언트 ID 지정
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#      transactional.id: "dialog-transaction"
    consumer:
      group-id: "chat-group"
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      isolation-level: read_committed
    #      enable-auto-commit: true
#    streams:
#      application-id: "team-streams-app"
#      processing.guarantee: exactly_once_v2
#      properties:
#        commit.interval.ms: 100


springdoc:
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  paths-to-match: /**
  swagger-ui:
    path: /
    display-request-duration: true
    groups-order: desc
    operations-sorter: method
    disable-swagger-default-url: true
  api-docs:
    groups:
      enabled: true
tag:
  version: 1.0.0

feign:
  chatflow:
    member: ${MEMBER_SERVICE_URL}